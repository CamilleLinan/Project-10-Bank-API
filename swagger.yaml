swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts
      summary: Find all user accounts with transactions
      description: Returns all user accounts with transactions
      operationId: getAccountsTransactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token 
          required: true
          schema:
            type: string
        - in: query
          name: Month
          description: Month of transaction equal to current month if is not specified 
          required: false
          schema:
            type: string
        - in: query
          name: Year
          description: Year of transaction equal to current year if is not specified 
          required: false
          schema:
            type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Accounts not found
        '500':
          description: Error server
  /transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Find a transaction by ID
      description: Returns a transaction by ID
      operationId: getTransactionById
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - in: path
          name: transactionId
          description: ID of transaction wanted 
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Accounts not found
        '500':
          description: Error server
    patch:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Update a transaction
      description: Returns a transaction modified
      operationId: updateTransaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - in: path
          name: transactionId
          description: ID of transaction wanted to update
          required: true
          schema:
            type: string
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            type: "object"
            properties:
              category:
                type: "string"
              notes:
                type: "string"
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Error server
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  AccountsResponse:
    type: "object"
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "string"
            userId:
              type: "string"
            title:
              type: "string"
            amount:
              type: "string"
            description:
              type: "string"
            transactions:
              type: "array"
              items:
                type: "object"
                properties:
                  id:
                    type: "string"
                  date:
                    type: "string"
                    format: "date-time"
                  description:
                    type: "string"
                  amount:
                    type: "string"
                  balance:
                    type: "number"
  Transaction:
    type: "object"
    properties:
      id:
        type: "string"
      date:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      amount:
        type: "string"
      balance:
        type: "number"
      type:
        type: "string"
      category:
        type: "string"
      notes:
        type: "string"
  TransactionResponse:
    type: "object"
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: "object"
        properties:
          id:
            type: "string"
          date:
            type: "string"
            format: "date-time"
          description:
            type: "string"
          amount:
            type: "string"
          balance:
            type: "number"
          type:
            type: "string"
          category:
            type: "string"
          notes:
            type: "string"
